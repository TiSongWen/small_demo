### 设置日志最低级别，同时指定日志信息输出到哪里 可指定多个 DEBUG < INFO < WARN < ERROR < FATAL###
log4j.rootLogger=debug,file



### direct messages to file hibernate.log ###
###Appender用来规定日志输出的目的地是哪里，可以是控制台，文件，数据库等等。###
log4j.appender.file=org.apache.log4j.ConsoleAppender
#log4j.appender.file.File=G:\\CodeWorld\\JavaWeb\\IDEA\\MyBatis\\hibernate.log
### 规定日志输出的格式 ###
log4j.appender.file.layout=org.apache.log4j.PatternLayout


 # 指定灵活布局模式下日志的格式
 #%c 输出所属类的全名
 #%d 输出日志时间其格式为 可指定格式 如 %d{HH:mm:ss} 等
 #%n 换行符
 #%m 输出代码指定信息，如 info(“message”), 输出 message
 #%p 输出日志的优先级，即 FATAL ,ERROR，INFO 等
log4j.appender.file.layout.ConversionPattern=%d %p %c %X{name} - %m%n

### %d{ABSOLUTE} %5p %c{1}:%L - %m%n


### set log levels - for more verbose logging change 'info' to 'debug' ###

# Log everything. Good for troubleshooting
log4j.logger.org.hibernate=INFO

# Log all JDBC parameters
#log4j.logger.org.hibernate.type=ALL

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug  //可关闭，使用了debug跟踪整个程序数据连接的每一步过程

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL 仅输出SQL语句
log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug   //跟踪输出，JDBC参数查询的日志

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug


#将日志发送到email
### log4j.logger.MailLog = WARN, XXXXX

